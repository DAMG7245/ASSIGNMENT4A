services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --save 60 1 --loglevel warning

  enterprise-service:
    build:
      context: ./backend/enterprise_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/enterprise_service:/app
    environment:
      - ENVIRONMENT=development
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - PDF_SERVICES_CLIENT_ID=${PDF_SERVICES_CLIENT_ID}
      - PDF_SERVICES_CLIENT_SECRET=${PDF_SERVICES_CLIENT_SECRET}
    restart: unless-stopped

  # opensource_service:
  #   build:
  #     context: ./backend/opensource_service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - ./backend/opensource_service:/app
  #   environment:
  #     - ENVIRONMENT=development
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - AWS_REGION=${AWS_REGION:-us-east-1}
  #     - AWS_S3_BUCKET=${AWS_S3_BUCKET}
  #   restart: unless-stopped

  llm-service:
    build:
      context: ./backend/llm_service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    volumes:
      - ./backend/llm_service:/app
    environment:
      - ENVIRONMENT=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always

volumes:
  redis_data:
